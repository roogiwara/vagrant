Vagrant.configure("2") do |config|
  config.vm.define "kubemaster" do |kubemaster|
    kubemaster.vm.box = "ubuntu/focal64"
    kubemaster.vm.network "public_network", ip: "192.168.15.201", hostname: true
    kubemaster.vm.hostname = 'kubemaster'

    kubemaster.vm.provider :virtualbox do |v1|
      v1.customize ["modifyvm", :id, "--memory", 2048]
	    v1.customize ["modifyvm", :id, "--cpus", 2]
      v1.customize ["modifyvm", :id, "--name", "kubemaster"]
    end

    kubemaster.vm.provision "shell", inline: <<-'SHELL'
      sed -i 's/^#* *\(PermitRootLogin\)\(.*\)$/\1 yes/' /etc/ssh/sshd_config
      sed -i 's/^#* *\(PasswordAuthentication\)\(.*\)$/\1 yes/' /etc/ssh/sshd_config
      systemctl restart sshd.service
      echo -e "vagrant\nvagrant" | (passwd vagrant)
      echo -e "root\nroot" | (passwd root)
      curl -fsSL https://get.docker.com | bash
      curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
      echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y kubelet kubeadm kubectl
      apt-mark hold kubelet kubeadm kubectl
      rm /etc/containerd/config.toml
      systemctl restart containerd
    SHELL
  end

  config.vm.define "kubenode01" do |kubenode01|
    kubenode01.vm.box = "ubuntu/focal64"
    kubenode01.vm.network "public_network", ip: "192.168.15.202", hostname: true
    kubenode01.vm.hostname = 'kubenode01'

    kubenode01.vm.provider :virtualbox do |v2|
      v2.customize ["modifyvm", :id, "--memory", 2048]
	    v2.customize ["modifyvm", :id, "--cpus", 2]
      v2.customize ["modifyvm", :id, "--name", "kubenode01"]
    end

    kubenode01.vm.provision "shell", inline: <<-'SHELL'
      sed -i 's/^#* *\(PermitRootLogin\)\(.*\)$/\1 yes/' /etc/ssh/sshd_config
      sed -i 's/^#* *\(PasswordAuthentication\)\(.*\)$/\1 yes/' /etc/ssh/sshd_config
      systemctl restart sshd.service
      echo -e "vagrant\nvagrant" | (passwd vagrant)
      echo -e "root\nroot" | (passwd root)
      curl -fsSL https://get.docker.com | bash
      curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
      echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y kubelet kubeadm kubectl
      apt-mark hold kubelet kubeadm kubectl
      rm /etc/containerd/config.toml
      systemctl restart containerd
    SHELL
  end

  config.vm.define "kubenode02" do |kubenode02|
    kubenode02.vm.box = "ubuntu/focal64"
    kubenode02.vm.network "public_network", ip: "192.168.15.203", hostname: true
    kubenode02.vm.hostname = 'kubenode02'

    kubenode02.vm.provider :virtualbox do |v3|
      v3.customize ["modifyvm", :id, "--memory", 2048]
	    v3.customize ["modifyvm", :id, "--cpus", 2]
      v3.customize ["modifyvm", :id, "--name", "kubenode02"]
    end

    kubenode02.vm.provision "shell", inline: <<-'SHELL'
      sed -i 's/^#* *\(PermitRootLogin\)\(.*\)$/\1 yes/' /etc/ssh/sshd_config
      sed -i 's/^#* *\(PasswordAuthentication\)\(.*\)$/\1 yes/' /etc/ssh/sshd_config
      systemctl restart sshd.service
      echo -e "vagrant\nvagrant" | (passwd vagrant)
      echo -e "root\nroot" | (passwd root)
      curl -fsSL https://get.docker.com | bash
      curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
      echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y kubelet kubeadm kubectl
      apt-mark hold kubelet kubeadm kubectl
      rm /etc/containerd/config.toml
      systemctl restart containerd
    SHELL
  end
end
